

** 0.1.x **
  - Multiplayer battle screen
  - Multiplayer world map
  - Social buttons
  - 'Channels' for town/world view
  - Instancing on dungeons?  Or perhaps on chests
  - Add 'challenges' to the battlescreen in place of the button



** 0.0.x **
	- Refactor css
	- Could the battle screen render different on a phone?
  - Get cannedwebview onto my mobile and do some tests to see where things
are... android dev was on a win PC...
	- test ahoy
	- Consider porting to padrino... check status of websockets and sinatra
	first
  - use fastly as a CDN
  - Pull out javascript handles from the HTML to be setup from within javascript from within initialize_game.js
  - Consider using backbone js and handling game logic inside the app!!!
  - Just 'start' the world map view... shared with dungeon view... shared with tow view...
    Desires:
    * Multiplayer fun... so...
      > enemy mobs are visible (and appear)
      > 'movement tiles' are small, or non tile based
      > has mini-map/ radar
    * iPad fun... so...
      > tapping/ mouse click native
      > Has auto travel

  - Setup PhatomJS unit tests


  - Add user logons with devise


  # Implement below persistent data:

    - user.party_settings.heros.first
        #=> { id: 1, name: "cecil", row: "", image: "/images/cecil_1" , hero_loadout: "object" }

    - game_data

      - heros
        - equipment_loadout
        - magic_loadout
        - base_stats
        - afflictions (stat modifiers)
        -

      - party_data

        - combat_setup
          - hero_id
          - position row_index + front/back

        - location
          - dungeon_name: "overworld", map_id: 0, x: 0, y: 0

    - map
      >> id:0, image: "/images/maps/overworld.png", tile_data_id: 0, zoology: {zoologic_data}
      - tile_data (run length encoded specifications of how players can interact with maps)
        -
      - zoologic_data (what mobs are in this dungeon map... what about the world map...)








CURRENT TASK:

  - Make javascript using modulejs and put it into a bower pacakge

  - Further removing globals so that everything is in the game object
    - Split initialize_game.js into...
      * _graphics.js
      * _audio.js
      * _main_loop.js

        >  I want to pull out the graphics code from InitialFantasy so it looks just like
           1 line of loadGraphics...
          i.  It needs to be refactored so it's accessible... kind of... like, organized
              into arrays.
            heroes = [new Hero(unitType.hero, 0, imgCecil, partyPositions.row1Front, "ground", 0),

This game could get huge...  I think it's best to download graphics on an as-needed basis...
but I'm not sure how to pull that off...

Make it so image data is loaded as needed... and cached... and a func can be called to pre-cache...

>> Make it so I can start the 'first battle' by querying the battle configuration from the server

>>> it's hard to think about 'securing' the game from a server client standpoint...
    the original was obviously a client only game...

>>>> The user needs to 'login', and the server needs to see their location as
     "first_spawn" and then initiate them into the first battle...
     I can't believe it's all this architecting just to refactor a .js file....

>>>>> I need to start devise logins now.......... =(   =(

>>>>>> After the javascript/ html is loaded, the client needs to ask the server
       "ok, what now?"
       and the server must reply
       "Start this unique battle: { battleConfigs }"

       AND when the client attacks a mob... it actually needs to tell the server
       it's attacking it...

       Shit.... I don't have any sweet kill animations!!! That's where I left off!!!


::Kill Mob Animation::
  >> WOAH!! the animation is way more fluid than this, I just can't step through
     the frames the way I was trying at first!
     The erase steaks appear through the mob, and then radiate outwards from the
     equator of the mob!  It's awesome in slow mo, but you can't step frames and see it.

  1) Fade blue/ purple (first tick)
  2) Stay faded/ do nothing (second tick)
  3) Erase lines through mobs 1-2 pixels wide
  4)
    Fade darker
    Widen erase marks
    Add some erase marks
  5)
    Fade darker
    Widen erase marks
    Add some erase marks
  6) widen erase marks, mob around 50% erased now

  7) Widen/ add erase marks, mob mostly gone?

  8) Erase mob completely


- Swinging animation
- fire whirling animation on mob (from fire sword I guess)
- dmg points animation
- mob death animation


SWING ANIMATION:
  Fight is clicked
  Mob is chosen (ActionMenu.fight)
  ->
    * actor's timer bar is set to zero and set to 'frozen' state
    * A 'fight' animation is set on the hero's animations list
      * With that fight animation, it's update() and render() methods are
        invoked on battleScreen.Update() and battleScreen.Render() respectively
    * Eventually, after update() is called enough times, the animation will
      complete and it will remove itself from the hero





COMPLETE:
  - Fixed browser compatibility issue by hacking the font
  - BugFix:  removed the now pointless edge conditionals webkitRequestAnimationFrame
	- BugFix:  Behavor with font differed one Windows 7, Firefox 37.0.1, solved
	by explicitly declaring div and li heights without ill effect.


** 0.0.1 **
  Early work...

  - Got javascript classes
  - Title screen
  - Battle screen
  - Some animations
